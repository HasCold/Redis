Redis strings store sequences of bytes, including text, serialized objects, and binary arrays. As such, strings are the simplest type of value you can associate with a Redis key. They're often used for caching.

Redis stores data in a key-value pair format, where each piece of data is associated with a unique key.
In Redis, keys are always strings, and they serve as the identifiers for the data stored in the database. The values associated with these keys can be various data types, such as strings, hashes, lists, sets, and more.

Example :-

set name Hasan
OK  -->> Ok means this value is now been setted.

get name
"Hasan"


Update :- You can also update the value from the GUI which is on our port localhost://8001/redis-stack/browser 
get name
"Muhammad Hasan Ali"


--------------------------- Right Convention -------------------------------------

<entity>:<id> value

id : name 
1.   Hasan              set user:1 Hasan
2.   Umer               set user:2 Umer
3.   Talha              set user:3 Talha


Redis can also do the grouping on the basis of this : Delimiter 


Expiry Limit to the String

Expire the redis key:value pair means after the given time 20 seconds this will delete from the redis database    
await client.expire("user:4", 20);  
await client.expire("msg:4", 20);  



keys user*   -->> Give the keys starting from the user
1) "user:3"
2) "user:1"
3) "user:2"


keys msg*
1) "msg:1"
2) "msg:2"
3) "msg:3"